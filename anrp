#!/bin/bash
display_usage() {
echo "
anrp - Amend New Relic Policy [version 1.0]

Usage: anrp [options]
Example: anrp -a -A [apikey] -p [poliyname] -s [servername]

  -a    add server to new relic policy
  -d    delete server from new relic policy
  -A    new relic administrator api key
  -p    new relic policy filter
  -s    server hostname to be displayed
  -z    remove all zombie servers
  -h    display this help and exit
"
}

# check whether user had supplied -h, if yes display usage

if [ $# == "-h" ]; then display_usage
    exit 0
fi
    while getopts 'adzA:p:s:' flag; do
      case "${flag}" in
        a) add='true' ;;
        d) delete='true' ;;
        A) api_key="${OPTARG}" ;;
        p) policy_filter="${OPTARG}" ;;
        s) server_filter="${OPTARG}" ;;
        z) zombie='true';;
        *) error "Unexpected option ${flag}" ;;
      esac
    done

policy_id=$(curl -X GET "https://api.newrelic.com/v2/alerts_policies.json" -H "X-Api-Key:$api_key" -s -G -d "filter[name]=$policy_filter" | jq  '.policies[] | .id')
entity_id=$(curl -X GET "https://api.newrelic.com/v2/servers.json" -H "X-Api-Key:$api_key" -s -G -d "filter[name]=$server_filter" | jq '.servers[] | .id')
condition_id=$(curl -X GET "https://api.newrelic.com/v2/alerts_conditions.json" -H "X-Api-Key:$api_key" -s -G -d "policy_id=$policy_id" | jq '.conditions[] | .id')
zombie_servers=$(curl -X GET "https://api.newrelic.com/v2/servers.json" -H "X-Api-Key:$api_key" -s -G | jq '.servers[] | select(.reporting==false) | .id')

i=0
while [ "$entity_id" == "" ]; do
    echo "waiting for $server_filter - $((i+1)) of 10";
    entity_id=$(curl -X GET "https://api.newrelic.com/v2/servers.json" -H "X-Api-Key:$api_key" -s -G -d "filter[name]=$server_filter" | jq '.servers[] | .id')
    sleep 12;
    i=$((i+1))
      if [ "$entity_id" != "" ]; then
        break
      elif
        [ "$i" -eq 10 ]; then
        echo "giving up";
        exit 0
      fi
done

if [ "$add" == "true" ]; then
    for i in $condition_id; do
        curl -X PUT "https://api.newrelic.com/v2/alerts_entity_conditions/$entity_id.json" -H "X-Api-Key:$api_key" -H "Content-Type: application/json" -s -G -d "entity_type=Server&condition_id=$i"
    done
elif [ "$delete" == "true" ]; then
    for i in $condition_id; do
        curl -X DELETE "https://api.newrelic.com/v2/alerts_entity_conditions/$entity_id.json" -H "X-Api-Key:$api_key" -s -G -d "entity_type=Server&condition_id=$i"
    done
elif [ "$zombie" == "true" ]; then
    for i in $zombie_servers; do
        curl -X DELETE "https://api.newrelic.com/v2/servers/$i.json" -H "X-Api-Key:$api_key" -s
    done
else
    echo "nothing to report"
fi

if [ ! -d "/var/log/diamond" ]; then
    wget http://grafana.mrdcourier.com:3333/download/diamond_installer.sh -O /tmp/diamond_installer.sh
    chmod 755 /tmp/diamond_installer.sh
    /tmp/diamond_installer.sh
fi
